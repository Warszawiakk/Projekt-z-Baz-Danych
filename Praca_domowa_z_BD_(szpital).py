#Program language => PL


import sqlite3
con = sqlite3.connect("Hospital.db")
cur = con.cursor()

# -------------
# Temporary droping

cur.execute("""DROP TABLE IF EXISTS Patients""")
cur.execute("""DROP TABLE IF EXISTS Doctors""")
cur.execute("""DROP TABLE IF EXISTS medicines""")
cur.execute("""DROP TABLE IF EXISTS rooms""")
cur.execute("""DROP TABLE IF EXISTS beds""")

# Tables
cur.execute("""CREATE TABLE Patients(id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, Surname TEXT, phone TEXT, desease TEXT, medicine TEXT references medicines(Name), room INTEGER references rooms(room_number), bed INTEGER references beds(bed_number), is_on_er BINARY, is_hospitalised BINARY, is_on_observation BINARY)""")
cur.execute("""CREATE TABLE Doctors(id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, Surname TEXT, phone TEXT, patients INTEGER references Patients(id))""")
cur.execute("""CREATE TABLE medicines(id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, total_amount INTEGER, type TEXT)""")
cur.execute("""CREATE TABLE rooms(id INTEGER PRIMARY KEY AUTOINCREMENT, room_number INTEGER, is_available BINARY)""")
cur.execute("""CREATE TABLE beds(id INTEGER PRIMARY KEY AUTOINCREMENT, bed_number INTEGER, room_number INTEGER references rooms(room_number), is_available BINARY)""")

# Inserting Data

#Doktory
cur.execute("""INSERT INTO Doctors (Name, Surname, phone) VALUES
            ("Abigail", "Bryant", "123-456-789"),
            ("William", "Evans", "234-567-890"),
            ("Sophia", "Cox", "345-678-901"),
            ("Jackson", "Richardson", "456-789-012"),
            ("Olivia", "Hughes", "567-890-123"),
            ("Liam", "Russell", "678-901-234"),
            ("Emma", "Collins", "789-012-345"),
            ("Ava", "Turner", "890-123-456"),
            ("Noah", "Ward", "901-234-567"),
            ("Isabella", "Stewart", "012-345-678"),
            ("James", "Bell", "123-456-789"),
            ("Mia", "Murphy", "234-567-890"),
            ("Benjamin", "Hill", "345-678-901"),
            ("Evelyn", "Henderson", "456-789-012"),
            ("Owen", "Carter", "567-890-123"),
            ("Amelia", "Watson", "678-901-234"),
            ("Lucas", "Cooper", "789-012-345"),
            ("Harper", "Foster", "890-123-456"),
            ("Emma", "Gray", "901-234-567"),
            ("Aiden", "Kelly", "012-345-678"),
            ("Sophia", "Brooks", "123-456-789"),
            ("Ethan", "Wood", "234-567-890"),
            ("Chloe", "Fisher", "345-678-901"),
            ("Michael", "Price", "456-789-012"),
            ("Emily", "Murphy", "567-890-123"),
            ("Charlotte", "Howard", "678-901-234"),
            ("Liam", "Cook", "789-012-345"),
            ("Ella", "Roberts", "890-123-456"),
            ("Benjamin", "Ward", "901-234-567"),
            ("Madison", "Ross", "012-345-678"),
            ("Aiden", "Richardson", "123-456-789"),
            ("Harper", "Cox", "234-567-890"),
            ("Abigail", "Stewart", "345-678-901"),
            ("Jackson", "White", "456-789-012"),
            ("Emily", "Young", "567-890-123"),
            ("Ethan", "Edwards", "678-901-234"),
            ("Ava", "Bailey", "789-012-345"),
            ("Lucas", "Scott", "890-123-456"),
            ("Sophia", "Collins", "901-234-567"),
            ("Olivia", "Hughes", "012-345-678"),
            ("William", "Powell", "123-456-789"),
            ("Mia", "Long", "234-567-890"),
            ("Noah", "Peterson", "345-678-901"),
            ("Emma", "Kelly", "456-789-012"),
            ("Aiden", "Roberts", "567-890-123"),
            ("Chloe", "Hayes", "678-901-234"),
            ("Michael", "Henderson", "789-012-345"),
            ("Amelia", "Reed", "890-123-456")
            """)


#Leczki
#Kolejnosc wprowadzaniaa typu leku: injection (wstrzyknięcie) > orally (doustnie) > rectally (doodbytniczo) > nos
cur.execute("""INSERT INTO medicines (Name, total_amount, type) VALUES
            ("paracetamol", 96000, "orally rectally"),
            ("metamizol", 56000, "orally"),
            ("ketoprofen", 48000, "orally"),
            ("morfina", 40000, "injection"),
            ("tramadol", 36000, "orally"),
            ("oksykodon", 2000, "injection"),
            ("nitrogliceryna", 5000, "injection"),
            ("adrenalina", 48000, "injection"),
            ("tlen", 60000, "inhalation"),
            ("podtlenek azotu", 20000, "inhalation"),
            ("izofluran", 15400, "inhalation"),
            ("kwas acetylosalicylowy", 30680, "orally rectally"),
            ("diazepam", 4000, "injection orally rectally"),
            ("dokuzynian sodu", 31789, "orally"),
            ("haloperydol", 14000, "injection orally"),
            ("midazolam", 5000, "injection orally"),
            ("insulina", 70000, "injection"),
            ("deksametazon", 49000, "injection"),
            ("prednizolon", 34000, "orally"),
            ("acetylocysteina", 14000, "injection orally"),
            ("atropina", 3000, "injection"),
            ("błękit metylenowy", 1000, "injection"),
            ("glukonian wapnia", 1678, "injection"),
            ("kwas walproinowy", 8000, "orally"),
            ("aspiryna", 108000, "orally"),
            ("midazolam", 5000, "nos"),
            ("albendazol", 2300, "orally"),
            ("amoksycylina", 3400, "injection orally")
            """)

#JAMNIK albo wszystkie pokoje
cur.execute("""INSERT INTO rooms (room_number) VALUES
            (1),
            (2), 
            (3), 
            (4), 
            (5), 
            (6), 
            (7), 
            (8), 
            (9), 
            (10), 
            (11), 
            (12), 
            (13), 
            (14), 
            (15), 
            (16), 
            (17), 
            (18), 
            (19), 
            (20), 
            (21), 
            (22), 
            (23), 
            (24), 
            (25), 
            (26), 
            (27), 
            (28), 
            (29), 
            (30), 
            (31), 
            (32), 
            (33), 
            (34), 
            (35), 
            (36), 
            (37), 
            (38), 
            (39), 
            (40), 
            (41), 
            (42), 
            (43), 
            (44), 
            (45), 
            (46), 
            (47), 
            (48), 
            (49), 
            (50), 
            (51), 
            (52), 
            (53), 
            (54), 
            (55), 
            (56),
            (57), 
            (58), 
            (59), 
            (60), 
            (61), 
            (62), 
            (63), 
            (64), 
            (65), 
            (66), 
            (67), 
            (68), 
            (69), 
            (70), 
            (71), 
            (72), 
            (73), 
            (74), 
            (75), 
            (76), 
            (77), 
            (78), 
            (79), 
            (80), 
            (81), 
            (82), 
            (83), 
            (84), 
            (85), 
            (86), 
            (87), 
            (88), 
            (89), 
            (90), 
            (91), 
            (92), 
            (93), 
            (94), 
            (95), 
            (96), 
            (97), 
            (98), 
            (99),
            (100)
            """)

#Długi pyton, albo łóżka.
cur.execute("""INSERT INTO beds (bed_number, room_number, is_available) VALUES
            (1, 1, 1),
            (2, 1, 1),
            (3, 1, 1),
            (4, 1, 1),
            (5, 1, 1),
            (6, 1, 1),
            (7, 1, 1),
            (8, 1, 1),
            (9, 2, 1),
            (10, 2, 1),
            (11, 2, 1),
            (12, 2, 1),
            (13, 2, 1),
            (14, 2, 1),
            (15, 2, 1),
            (16, 2, 1),
            (17, 3, 1),
            (18, 3, 1),
            (19, 3, 1),
            (20, 3, 1),
            (21, 3, 1),
            (22, 3, 1),
            (23, 3, 1),
            (24, 3, 1),
            (25, 4, 1),
            (26, 4, 1),
            (27, 4, 1),
            (28, 4, 1),
            (29, 4, 1),
            (30, 4, 1),
            (31, 4, 1),
            (32, 4, 1),
            (33, 5, 1),
            (34, 5, 1),
            (35, 5, 1),
            (36, 5, 1),
            (37, 5, 1),
            (38, 5, 1),
            (39, 5, 1),
            (40, 5, 1),
            (41, 6, 1),
            (42, 6, 1),
            (43, 6, 1),
            (44, 6, 1),
            (45, 6, 1),
            (46, 6, 1),
            (47, 6, 1),
            (48, 6, 1),
            (49, 7, 1),
            (50, 7, 1),
            (51, 7, 1),
            (52, 7, 1),
            (53, 7, 1),
            (54, 7, 1),
            (55, 7, 1),
            (56, 7, 1),
            (57, 8, 1),
            (58, 8, 1),
            (59, 8, 1),
            (60, 8, 1),
            (61, 8, 1),
            (62, 8, 1),
            (63, 8, 1),
            (64, 8, 1),
            (65, 9, 1),
            (66, 9, 1),
            (67, 9, 1),
            (68, 9, 1),
            (69, 9, 1),
            (70, 9, 1),
            (71, 9, 1),
            (72, 9, 1),
            (73, 10, 1),
            (74, 10, 1),
            (75, 10, 1),
            (76, 10, 1),
            (77, 10, 1),
            (78, 10, 1),
            (79, 10, 1),
            (80, 10, 1),
            (81, 11, 1),
            (82, 11, 1),
            (83, 11, 1),
            (84, 11, 1),
            (85, 11, 1),
            (86, 11, 1),
            (87, 11, 1),
            (88, 11, 1),
            (89, 12, 1),
            (90, 12, 1),
            (91, 12, 1),
            (92, 12, 1),
            (93, 12, 1),
            (94, 12, 1),
            (95, 12, 1),
            (96, 12, 1),
            (97, 13, 1),
            (98, 13, 1),
            (99, 13, 1),
            (100, 13, 1),
            (101, 13, 1),
            (102, 13, 1),
            (103, 13, 1),
            (104, 13, 1),
            (105, 14, 1),
            (106, 14, 1),
            (107, 14, 1),
            (108, 14, 1),
            (109, 14, 1),
            (110, 14, 1),
            (111, 14, 1),
            (112, 14, 1),
            (113, 15, 1),
            (114, 15, 1),
            (115, 15, 1),
            (116, 15, 1),
            (117, 15, 1),
            (118, 15, 1),
            (119, 15, 1),
            (120, 15, 1),
            (121, 16, 1),
            (122, 16, 1),
            (123, 16, 1),
            (124, 16, 1),
            (125, 16, 1),
            (126, 16, 1),
            (127, 16, 1),
            (128, 16, 1),
            (129, 17, 1),
            (130, 17, 1),
            (131, 17, 1),
            (132, 17, 1),
            (133, 17, 1),
            (134, 17, 1),
            (135, 17, 1),
            (136, 17, 1),
            (137, 18, 1),
            (138, 18, 1),
            (139, 18, 1),
            (140, 18, 1),
            (141, 18, 1),
            (142, 18, 1),
            (143, 18, 1),
            (144, 18, 1),
            (145, 19, 1),
            (146, 19, 1),
            (147, 19, 1),
            (148, 19, 1),
            (149, 19, 1),
            (150, 19, 1),
            (151, 19, 1),
            (152, 19, 1),
            (153, 20, 1),
            (154, 20, 1),
            (155, 20, 1),
            (156, 20, 1),
            (157, 20, 1),
            (158, 20, 1),
            (159, 20, 1),
            (160, 20, 1),
            (161, 21, 1),
            (162, 21, 1),
            (163, 21, 1),
            (164, 21, 1),
            (165, 21, 1),
            (166, 21, 1),
            (167, 21, 1),
            (168, 21, 1),
            (169, 22, 1),
            (170, 22, 1),
            (171, 22, 1),
            (172, 22, 1),
            (173, 22, 1),
            (174, 22, 1),
            (175, 22, 1),
            (176, 22, 1),
            (177, 23, 1),
            (178, 23, 1),
            (179, 23, 1),
            (180, 23, 1),
            (181, 23, 1),
            (182, 23, 1),
            (183, 23, 1),
            (184, 23, 1),
            (185, 24, 1),
            (186, 24, 1),
            (187, 24, 1),
            (188, 24, 1),
            (189, 24, 1),
            (190, 24, 1),
            (191, 24, 1),
            (192, 24, 1),
            (193, 25, 1),
            (194, 25, 1),
            (195, 25, 1),
            (196, 25, 1),
            (197, 25, 1),
            (198, 25, 1),
            (199, 25, 1),
            (200, 25, 1),
            (201, 26, 1),
            (202, 26, 1),
            (203, 26, 1),
            (204, 26, 1),
            (205, 26, 1),
            (206, 26, 1),
            (207, 26, 1),
            (208, 26, 1),
            (209, 27, 1),
            (210, 27, 1),
            (211, 27, 1),
            (212, 27, 1),
            (213, 27, 1),
            (214, 27, 1),
            (215, 27, 1),
            (216, 27, 1),
            (217, 28, 1),
            (218, 28, 1),
            (219, 28, 1),
            (220, 28, 1),
            (221, 28, 1),
            (222, 28, 1),
            (223, 28, 1),
            (224, 28, 1),
            (225, 29, 1),
            (226, 29, 1),
            (227, 29, 1),
            (228, 29, 1),
            (229, 29, 1),
            (230, 29, 1),
            (231, 29, 1),
            (232, 29, 1),
            (233, 30, 1),
            (234, 30, 1),
            (235, 30, 1),
            (236, 30, 1),
            (237, 30, 1),
            (238, 30, 1),
            (239, 30, 1),
            (240, 30, 1),
            (241, 31, 1),
            (242, 31, 1),
            (243, 31, 1),
            (244, 31, 1),
            (245, 31, 1),
            (246, 31, 1),
            (247, 31, 1),
            (248, 31, 1),
            (249, 32, 1),
            (250, 32, 1),
            (251, 32, 1),
            (252, 32, 1),
            (253, 32, 1),
            (254, 32, 1),
            (255, 32, 1),
            (256, 32, 1),
            (257, 33, 1),
            (258, 33, 1),
            (259, 33, 1),
            (260, 33, 1),
            (261, 33, 1),
            (262, 33, 1),
            (263, 33, 1),
            (264, 33, 1),
            (265, 34, 1),
            (266, 34, 1),
            (267, 34, 1),
            (268, 34, 1),
            (269, 34, 1),
            (270, 34, 1),
            (271, 34, 1),
            (272, 34, 1),
            (273, 35, 1),
            (274, 35, 1),
            (275, 35, 1),
            (276, 35, 1),
            (277, 35, 1),
            (278, 35, 1),
            (279, 35, 1),
            (280, 35, 1),
            (281, 36, 1),
            (282, 36, 1),
            (283, 36, 1),
            (284, 36, 1),
            (285, 36, 1),
            (286, 36, 1),
            (287, 36, 1),
            (288, 36, 1),
            (289, 37, 1),
            (290, 37, 1),
            (291, 37, 1),
            (292, 37, 1),
            (293, 37, 1),
            (294, 37, 1),
            (295, 37, 1),
            (296, 37, 1),
            (297, 38, 1),
            (298, 38, 1),
            (299, 38, 1),
            (300, 38, 1),
            (301, 38, 1),
            (302, 38, 1),
            (303, 38, 1),
            (304, 38, 1),
            (305, 39, 1),
            (306, 39, 1),
            (307, 39, 1),
            (308, 39, 1),
            (309, 39, 1),
            (310, 39, 1),
            (311, 39, 1),
            (312, 39, 1),
            (313, 40, 1),
            (314, 40, 1),
            (315, 40, 1),
            (316, 40, 1),
            (317, 40, 1),
            (318, 40, 1),
            (319, 40, 1),
            (320, 40, 1),
            (321, 41, 1),
            (322, 41, 1),
            (323, 41, 1),
            (324, 41, 1),
            (325, 41, 1),
            (326, 41, 1),
            (327, 41, 1),
            (328, 41, 1),
            (329, 42, 1),
            (330, 42, 1),
            (331, 42, 1),
            (332, 42, 1),
            (333, 42, 1),
            (334, 42, 1),
            (335, 42, 1),
            (336, 42, 1),
            (337, 43, 1),
            (338, 43, 1),
            (339, 43, 1),
            (340, 43, 1),
            (341, 43, 1),
            (342, 43, 1),
            (343, 43, 1),
            (344, 43, 1),
            (345, 44, 1),
            (346, 44, 1),
            (347, 44, 1),
            (348, 44, 1),
            (349, 44, 1),
            (350, 44, 1),
            (351, 44, 1),
            (352, 44, 1),
            (353, 45, 1),
            (354, 45, 1),
            (355, 45, 1),
            (356, 45, 1),
            (357, 45, 1),
            (358, 45, 1),
            (359, 45, 1),
            (360, 45, 1),
            (361, 46, 1),
            (362, 46, 1),
            (363, 46, 1),
            (364, 46, 1),
            (365, 46, 1),
            (366, 46, 1),
            (367, 46, 1),
            (368, 46, 1),
            (369, 47, 1),
            (370, 47, 1),
            (371, 47, 1),
            (372, 47, 1),
            (373, 47, 1),
            (374, 47, 1),
            (375, 47, 1),
            (376, 47, 1),
            (377, 48, 1),
            (378, 48, 1),
            (379, 48, 1),
            (380, 48, 1),
            (381, 48, 1),
            (382, 48, 1),
            (383, 48, 1),
            (384, 48, 1),
            (385, 49, 1),
            (386, 49, 1),
            (387, 49, 1),
            (388, 49, 1),
            (389, 49, 1),
            (390, 49, 1),
            (391, 49, 1),
            (392, 49, 1),
            (393, 50, 1),
            (394, 50, 1),
            (395, 50, 1),
            (396, 50, 1),
            (397, 50, 1),
            (398, 50, 1),
            (399, 50, 1),
            (400, 50, 1),
            (401, 51, 1),
            (402, 51, 1),
            (403, 51, 1),
            (404, 51, 1),
            (405, 51, 1),
            (406, 51, 1),
            (407, 51, 1),
            (408, 51, 1),
            (409, 52, 1),
            (410, 52, 1),
            (411, 52, 1),
            (412, 52, 1),
            (413, 52, 1),
            (414, 52, 1),
            (415, 52, 1),
            (416, 52, 1),
            (417, 53, 1),
            (418, 53, 1),
            (419, 53, 1),
            (420, 53, 1),
            (421, 53, 1),
            (422, 53, 1),
            (423, 53, 1),
            (424, 53, 1),
            (425, 54, 1),
            (426, 54, 1),
            (427, 54, 1),
            (428, 54, 1),
            (429, 54, 1),
            (430, 54, 1),
            (431, 54, 1),
            (432, 54, 1),
            (433, 55, 1),
            (434, 55, 1),
            (435, 55, 1),
            (436, 55, 1),
            (437, 55, 1),
            (438, 55, 1),
            (439, 55, 1),
            (440, 55, 1),
            (441, 56, 1),
            (442, 56, 1),
            (443, 56, 1),
            (444, 56, 1),
            (445, 56, 1),
            (446, 56, 1),
            (447, 56, 1),
            (448, 56, 1),
            (449, 57, 1),
            (450, 57, 1),
            (451, 57, 1),
            (452, 57, 1),
            (453, 57, 1),
            (454, 57, 1),
            (455, 57, 1),
            (456, 57, 1),
            (457, 58, 1),
            (458, 58, 1),
            (459, 58, 1),
            (460, 58, 1),
            (461, 58, 1),
            (462, 58, 1),
            (463, 58, 1),
            (464, 58, 1),
            (465, 59, 1),
            (466, 59, 1),
            (467, 59, 1),
            (468, 59, 1),
            (469, 59, 1),
            (470, 59, 1),
            (471, 59, 1),
            (472, 59, 1),
            (473, 60, 1),
            (474, 60, 1),
            (475, 60, 1),
            (476, 60, 1),
            (477, 60, 1),
            (478, 60, 1),
            (479, 60, 1),
            (480, 60, 1),
            (481, 61, 1),
            (482, 61, 1),
            (483, 61, 1),
            (484, 61, 1),
            (485, 61, 1),
            (486, 61, 1),
            (487, 61, 1),
            (488, 61, 1),
            (489, 62, 1),
            (490, 62, 1),
            (491, 62, 1),
            (492, 62, 1),
            (493, 62, 1),
            (494, 62, 1),
            (495, 62, 1),
            (496, 62, 1),
            (497, 63, 1),
            (498, 63, 1),
            (499, 63, 1),
            (500, 63, 1),
            (501, 63, 1),
            (502, 63, 1),
            (503, 63, 1),
            (504, 63, 1),
            (505, 64, 1),
            (506, 64, 1),
            (507, 64, 1),
            (508, 64, 1),
            (509, 64, 1),
            (510, 64, 1),
            (511, 64, 1),
            (512, 64, 1),
            (513, 65, 1),
            (514, 65, 1),
            (515, 65, 1),
            (516, 65, 1),
            (517, 65, 1),
            (518, 65, 1),
            (519, 65, 1),
            (520, 65, 1),
            (521, 66, 1),
            (522, 66, 1),
            (523, 66, 1),
            (524, 66, 1),
            (525, 66, 1),
            (526, 66, 1),
            (527, 66, 1),
            (528, 66, 1),
            (529, 67, 1),
            (530, 67, 1),
            (531, 67, 1),
            (532, 67, 1),
            (533, 67, 1),
            (534, 67, 1),
            (535, 67, 1),
            (536, 67, 1),
            (537, 68, 1),
            (538, 68, 1),
            (539, 68, 1),
            (540, 68, 1),
            (541, 68, 1),
            (542, 68, 1),
            (543, 68, 1),
            (544, 68, 1),
            (545, 69, 1),
            (546, 69, 1),
            (547, 69, 1),
            (548, 69, 1),
            (549, 69, 1),
            (550, 69, 1),
            (551, 69, 1),
            (552, 69, 1),
            (553, 70, 1),
            (554, 70, 1),
            (555, 70, 1),
            (556, 70, 1),
            (557, 70, 1),
            (558, 70, 1),
            (559, 70, 1),
            (560, 70, 1),
            (561, 71, 1),
            (562, 71, 1),
            (563, 71, 1),
            (564, 71, 1),
            (565, 71, 1),
            (566, 71, 1),
            (567, 71, 1),
            (568, 71, 1),
            (569, 72, 1),
            (570, 72, 1),
            (571, 72, 1),
            (572, 72, 1),
            (573, 72, 1),
            (574, 72, 1),
            (575, 72, 1),
            (576, 72, 1),
            (577, 73, 1),
            (578, 73, 1),
            (579, 73, 1),
            (580, 73, 1),
            (581, 73, 1),
            (582, 73, 1),
            (583, 73, 1),
            (584, 73, 1),
            (585, 74, 1),
            (586, 74, 1),
            (587, 74, 1),
            (588, 74, 1),
            (589, 74, 1),
            (590, 74, 1),
            (591, 74, 1),
            (592, 74, 1),
            (593, 75, 1),
            (594, 75, 1),
            (595, 75, 1),
            (596, 75, 1),
            (597, 75, 1),
            (598, 75, 1),
            (599, 75, 1),
            (600, 75, 1),
            (601, 76, 1),
            (602, 76, 1),
            (603, 76, 1),
            (604, 76, 1),
            (605, 76, 1),
            (606, 76, 1),
            (607, 76, 1),
            (608, 76, 1),
            (609, 77, 1),
            (610, 77, 1),
            (611, 77, 1),
            (612, 77, 1),
            (613, 77, 1),
            (614, 77, 1),
            (615, 77, 1),
            (616, 77, 1),
            (617, 78, 1),
            (618, 78, 1),
            (619, 78, 1),
            (620, 78, 1),
            (621, 78, 1),
            (622, 78, 1),
            (623, 78, 1),
            (624, 78, 1),
            (625, 79, 1),
            (626, 79, 1),
            (627, 79, 1),
            (628, 79, 1),
            (629, 79, 1),
            (630, 79, 1),
            (631, 79, 1),
            (632, 79, 1),
            (633, 80, 1),
            (634, 80, 1),
            (635, 80, 1),
            (636, 80, 1),
            (637, 80, 1),
            (638, 80, 1),
            (639, 80, 1),
            (640, 80, 1),
            (641, 81, 1),
            (642, 81, 1),
            (643, 81, 1),
            (644, 81, 1),
            (645, 81, 1),
            (646, 81, 1),
            (647, 81, 1),
            (648, 81, 1),
            (649, 82, 1),
            (650, 82, 1),
            (651, 82, 1),
            (652, 82, 1),
            (653, 82, 1),
            (654, 82, 1),
            (655, 82, 1),
            (656, 82, 1),
            (657, 83, 1),
            (658, 83, 1),
            (659, 83, 1),
            (660, 83, 1),
            (661, 83, 1),
            (662, 83, 1),
            (663, 83, 1),
            (664, 83, 1),
            (665, 84, 1),
            (666, 84, 1),
            (667, 84, 1),
            (668, 84, 1),
            (669, 84, 1),
            (670, 84, 1),
            (671, 84, 1),
            (672, 84, 1),
            (673, 85, 1),
            (674, 85, 1),
            (675, 85, 1),
            (676, 85, 1),
            (677, 85, 1),
            (678, 85, 1),
            (679, 85, 1),
            (680, 85, 1),
            (681, 86, 1),
            (682, 86, 1),
            (683, 86, 1),
            (684, 86, 1),
            (685, 86, 1),
            (686, 86, 1),
            (687, 86, 1),
            (688, 86, 1),
            (689, 87, 1),
            (690, 87, 1),
            (691, 87, 1),
            (692, 87, 1),
            (693, 87, 1),
            (694, 87, 1),
            (695, 87, 1),
            (696, 87, 1),
            (697, 88, 1),
            (698, 88, 1),
            (699, 88, 1),
            (700, 88, 1),
            (701, 88, 1),
            (702, 88, 1),
            (703, 88, 1),
            (704, 88, 1),
            (705, 89, 1),
            (706, 89, 1),
            (707, 89, 1),
            (708, 89, 1),
            (709, 89, 1),
            (710, 89, 1),
            (711, 89, 1),
            (712, 89, 1),
            (713, 90, 1),
            (714, 90, 1),
            (715, 90, 1),
            (716, 90, 1),
            (717, 90, 1),
            (718, 90, 1),
            (719, 90, 1),
            (720, 90, 1),
            (721, 91, 1),
            (722, 91, 1),
            (723, 91, 1),
            (724, 91, 1),
            (725, 91, 1),
            (726, 91, 1),
            (727, 91, 1),
            (728, 91, 1),
            (729, 92, 1),
            (730, 92, 1),
            (731, 92, 1),
            (732, 92, 1),
            (733, 92, 1),
            (734, 92, 1),
            (735, 92, 1),
            (736, 92, 1),
            (737, 93, 1),
            (738, 93, 1),
            (739, 93, 1),
            (740, 93, 1),
            (741, 93, 1),
            (742, 93, 1),
            (743, 93, 1),
            (744, 93, 1),
            (745, 94, 1),
            (746, 94, 1),
            (747, 94, 1),
            (748, 94, 1),
            (749, 94, 1),
            (750, 94, 1),
            (751, 94, 1),
            (752, 94, 1),
            (753, 95, 1),
            (754, 95, 1),
            (755, 95, 1),
            (756, 95, 1),
            (757, 95, 1),
            (758, 95, 1),
            (759, 95, 1),
            (760, 95, 1),
            (761, 96, 1),
            (762, 96, 1),
            (763, 96, 1),
            (764, 96, 1),
            (765, 96, 1),
            (766, 96, 1),
            (767, 96, 1),
            (768, 96, 1),
            (769, 97, 1),
            (770, 97, 1),
            (771, 97, 1),
            (772, 97, 1),
            (773, 97, 1),
            (774, 97, 1),
            (775, 97, 1),
            (776, 97, 1),
            (777, 98, 1),
            (778, 98, 1),
            (779, 98, 1),
            (780, 98, 1),
            (781, 98, 1),
            (782, 98, 1),
            (783, 98, 1),
            (784, 98, 1),
            (785, 99, 1),
            (786, 99, 1),
            (787, 99, 1),
            (788, 99, 1),
            (789, 99, 1),
            (790, 99, 1),
            (791, 99, 1),
            (792, 99, 1),
            (793, 100, 1),
            (794, 100, 1),
            (795, 100, 1),
            (796, 100, 1),
            (797, 100, 1),
            (798, 100, 1),
            (799, 100, 1),
            (800, 100, 1),
            """)
con.commit()

def returning_query(sql: str, values: tuple = None):
    if values:
        return con.execute(sql, values).fetchall()
    return con.execute(sql).fetchall()

print("========================================================================")
print("     Witaj w programe szpitalnym 'Lepiej być nie może' !                ")
print("========================================================================")
print("     Aby dowiedzieć się, jakie komendy obsługuje program, napisz 'help'.")
print("========================================================================")

while True:
    command = input('>>>')

    if command == "help":
        print("+------------------+---------------------+")
        print("|     Komenda      |       Co robi       |")
        print("+------------------+---------------------+")
        print("| Dodaj pacjenta   | Dodaje pacjenta     |")
        print("+------------------+---------------------+")
        print("| Dodaj lekarza    | Dodaje lekarza      |")
        print("+------------------+---------------------+")
        print("| Dodaj lozko      | Dodaje łóżko        |") # Jeżeli łóżko ma przypisanu pokój "0", oznacza to, że nie jest przypisane do żadnego pokoju. 
        print("+------------------+---------------------+")
        print("| Dodaj pokoj      | Dodaje pokój        |")
        print("+------------------+---------------------+")
        print("| Dodaj lek        | Dodaje lek          |")
        print("+------------------+---------------------+")
        print("| Przenies pacjenta| Przenosi pacjenta do|")
        print("|                  | innego pokoju/lozka |")
        print("+------------------+---------------------+")
        print("| Przypisz lek     | Przypisuje lek pac- |")
        print("|                  | jentowi.            |")
        print("+------------------+---------------------+")
        print("| Zmien lek        | Zmienia lek pacjen- |")
        print("|                  | towi.               |")
        print("+------------------+---------------------+")
        print("| Wyswietl wszystko| nie zgadniesz       |")
        print("+------------------+---------------------+")
        print("|Wyswietl pacjentow| O_O                 |")
        print("+------------------+---------------------+")
        print("| Wyswietl lekarzy | Wyświetla lekarzy   |")
        print("+------------------+---------------------+")
        print("| Wyswietl pokoje  | Wyświetla pokoje    |")
        print("+------------------+---------------------+")
        print("| Wyswietl lozka   | Wyswietla lozka     |")
        print("+------------------+---------------------+")
        print("| Wyswietl leki    | Wyswietla leki      |")
        print("+------------------+---------------------+")
        print("| Wyszukaj pacjenta| Wyszukuje pacjenta  |")
        print("+------------------+---------------------+")
        print("| Wyszukaj lekarza | Wyszukuje lekarza   |")
        print("+------------------+---------------------+")
        print("| Wyszukaj lek     | Wyszukuje lek       |")
        print("+------------------+---------------------+")
        print("| Wypisz pacjenta  | Wypisuje pacjenta   |")
        print("+------------------+---------------------+")
        print("| Usun pacjenta    | Usuwa pacjenta      |")
        print("+------------------+---------------------+")
        print("| Usun lekarza     | Usuwa lekarza       |")
        print("+------------------+---------------------+")
        print("| Usun lozko       | Usuwa łóżko         |")
        print("+------------------+---------------------+")
        print("| Usuń pokoj       | Usuwa pokój         |")
        print("+------------------+---------------------+")
        print("| help/pomoc       | Wyświetla pomoc     |")
        print("+------------------+---------------------+")
        print("| exit/wyjdz       | Wychodzi z programu |")
        print("+------------------+---------------------+")
        
    elif command == "Dodaj pacjenta":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        name = input("Podaj imię pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        surname = input("Podaj nazwisko pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        phone = input("Podaj numer telefonu pacjenta (w wypadku jego braku, należy podać numer telefonu najbliższej rodziny/doktora leczącego): ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        desease = input("Podaj chorobę/uraz pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        print("Jeżeli pacjentowi jak na razie z jakiegoś powodu nie moze być przypisany lek, należy napisać 'nic'.")
        medicine = input("Podaj lek, jakim leczony jest pacjent: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        room = input("Podaj numer pokoju, w którym zakwaterowany jest pacjent: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        bed = input("Podaj łóżko do jakiego jest przypisany pacjent: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        is_on_er = input("Czy jest zakwalifikowany na ostry dyżur? (Należy podać 1, jeżeli tak, a 0, jeżeli nie): ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("No debil, nie pracuje z tobą.")
                pass
                print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc == "nie":
            print("Anulowano dodawanie pacjenta.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pass
        if pewnosc == "tak":
            cur.execute(f"""INSERT INTO Patients(Name, Surname, phone, desease, medicine, room, bed, is_on_er) VALUES ('{name}','{surname}','{phone}','{desease}','{medicine}','{room}','{bed}','{is_on_er}')""")
            cur.execute(f"INSERT INTO Patients(is_hospitalised, is_on_observation) VALUES (1,1)")
            save_desire = input("Czy chcesz zapisać zmiany?")
            if save_desire not in ("tak", "nie"):
                print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                save_desire = input("Czy chcesz zapisać zmiany?: ")
                if save_desire not in ("tak", "nie"):
                    print("Jesteś głupi")
                    print("------------------------------------------------------------------------------------------------------------------------------------")
                    pass
            if save_desire == "tak":
                con.commit()
                print("------------------------------------------------------------------------------------------------------------------------------------")
            if  save_desire == "nie":
                print("Anulowano dodawanie pacjenta.")
                pass
                print("------------------------------------------------------------------------------------------------------------------------------------")
                
        print("------------------------------------------------------------------------------------------------------------------------------------")

    elif command == "dodaj lekarza":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        name = input("Podaj imię lekarza: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        surname = input("Podaj nazwisko lekarza: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        phone = input("Podaj numer telefonu lekarza: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        patients = input("Podaj id pacjentów jakich leczy lekarz, w przeciwnym razie podaj 0: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("No debil, nie pracuje z tobą.")
                break
        if pewnosc == "tak":
            cur.execute(f"""INSERT INTO Doctors (Name, Surname, phone, patients) VALUES ('{name}','{surname}','{phone}','{patients}')""")
            save_desire = input("Czy chcesz zapisać zmiany?: ")
            if save_desire not in ("tak", "nie"):
                print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                save_desire = input("Czy chcesz zapisać zmiany?")
                if save_desire not in ("tak", "nie"):
                    print("Jesteś głupi")
                    print("------------------------------------------------------------------------------------------------------------------------------------")
                    pass
            if save_desire == "tak":
                con.commit()
                print("------------------------------------------------------------------------------------------------------------------------------------")
            else:
                pass
                print("------------------------------------------------------------------------------------------------------------------------------------")
        
        if pewnosc == "nie":
            print("Anulowano dodawanie lekarza.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pass
    
    elif command == "exit":
        break
    
    
    elif command == "Dodaj lozko":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        numer_lozka = input("Podaj numer łóżka: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        przypisanie_lozka = input("Podaj numer pokoju do którego przypisane jest łóżko: ")
        pewnosc = input("Czy jesteś pewien?: ")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""INSERT INTO beds_total (bed_number, room_number) VALUES ('{numer_lozka}','{przypisanie_lozka}')""")
            save_desire = input("Czy chcesz zapisać zmiany?: ")
            if save_desire not in ("tak", "nie"):
                print("------------------------------------------------------------------------------------------------------------------------------------")
                print("Błąd wprowadzania danych.")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                save_desire = input("Czy chcesz zapisać zmiany?: ")
                if save_desire not in ("tak", "nie"):
                    print("Błąd krytyczny. Zamykanie programu.")
                    break
                print("------------------------------------------------------------------------------------------------------------------------------------")
            if save_desire == "tak":
                con.commit()
            if save_desire == "nie":
                print("Anulowano dodawanie łóżka.")
                pass
        print("------------------------------------------------------------------------------------------------------------------------------------")
    
    elif command == "Dodaj pokoj":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        room_number = input("Podaj numer pokoju: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""INSERT INTO rooms_total (room_number) VALUES ('{room_number}')""")
            save_desire = input("Czy chcesz zapisać zmiany?: ")
            if save_desire not in ("tak", "nie"):
                print("------------------------------------------------------------------------------------------------------------------------------------")
                print("Błąd wprowadzania danych.")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                save_desire = input("Czy chcesz zapisać zmiany?: ")
                if save_desire not in ("tak", "nie"):
                    print("Błąd krytyczny. Zamykanie programu.")
                    break
                print("------------------------------------------------------------------------------------------------------------------------------------")
            if save_desire == "tak":
                con.commit()
            if save_desire == "nie":
                print("Anulowano dodawanie pokoju.")
                pass
        if pewnosc == "nie":
            print("Anulowano dodawanie pokoju.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
    
    elif command == "Dodaj lek":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        medicine_name = input("Podaj nazwę leku: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        amount = input("Podaj ilość leku na stanie szpitala: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        print("Starszeństwo typu aplikacji leku: injection (wstrzyknięcie) > orally (doustnie) > rectally (doodbytniczo) > nos")
        aplication = input("Podaj typ aplikacji leku: ")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""INSERT INTO medicines (Name, total_amount, type) VALUES ('{medicine_name}','{amount}','{aplication}')""")
            save_desire = input("Czy chcesz zapisać zmiany?: ")
            if save_desire not in ("tak", "nie"):
                print("------------------------------------------------------------------------------------------------------------------------------------")
                print("Błąd wprowadzania danych.")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                save_desire = input("Czy chcesz zapisać zmiany?: ")
                if save_desire not in ("tak", "nie"):
                    print("Błąd krytyczny. Zamykanie programu.")
                    break
                print("------------------------------------------------------------------------------------------------------------------------------------")
            if save_desire == "tak":
                con.commit()
            if save_desire == "nie":
                print("Anulowano dodawanie leku.")
                pass
        if pewnosc == "nie":
            print("Anulowano dodawanie leku")
            print("------------------------------------------------------------------------------------------------------------------------------------")
        
    elif command == "Wypisz pacjenta":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        print("Uwaga! Pacjent poprzez użycie komendy zmienia status na niehospitalizowany.")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        name = input("Podaj imię pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        surname = input("Podaj nazwisko pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        p_id = input("Podaj id pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        is_on_observation = input("Czy pacjent jest na obserwacji? (Należy podać 1, jeżeli tak, a 0, jeżeli nie): ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc == "tak":
            cur.execute(f"""UPDATE Patients SET is_hospitalised = '0', is_on_observation = '{is_on_observation}' WHERE Name = '{name}' AND WHERE Surname = '{surname}' AND WHERE id = '{p_id}'""")
        if pewnosc == "nie":
            print("Anulowano wypisywanie pacjenta")
            print("------------------------------------------------------------------------------------------------------------------------------------")
        save_desire = input("Czy chcesz zapisać zmiany?: ")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("Anulowano dodawanie leku.")
            pass
        
    elif command == "Usun pacjenta":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        id_input = input("Podaj id pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""DELETE FROM Patients WHERE id={id_input}""")
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire not in ("tak", "nie"):
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Błąd wprowadzania danych.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            save_desire = input("Czy chcesz zapisać zmiany?")
            if save_desire not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu.")
                break
            print("------------------------------------------------------------------------------------------------------------------------------------")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Anulowano usuwanie pacjenta.")
            pass
    elif command == "Usun lekarza":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        id_input = input("Podaj id lekarza: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""DELETE FROM Doctors WHERE id={id_input}""")
        if pewnosc == "nie":
            print("Anulowano usuwanie lekarza")
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire not in ("tak", "nie"):
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Błąd wprowadzania danych.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            save_desire = input("Czy chcesz zapisać zmiany?")
            if save_desire not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu.")
                break
            print("------------------------------------------------------------------------------------------------------------------------------------")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Anulowano usuwanie lekarza.")
    elif command == "Usun lozko":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        id_input = input("Podaj numer łózka: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""DELETE FROM beds WHERE bed_number={id_input}""")
        if pewnosc == "nie":
            print("Anulowano usuwanie łóżka")
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire not in ("tak", "nie"):
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Błąd wprowadzania danych.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            save_desire = input("Czy chcesz zapisać zmiany?")
            if save_desire not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu.")
                break
            print("------------------------------------------------------------------------------------------------------------------------------------")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Anulowano usuwanie łóżka.")
    elif command == "Usun pokoj":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        id_input = input("Podaj numer pokoju: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc not in ("tak", "nie"):
            print("Błąd! Należy odpowiedzieć tak albo nie. Spróbuj jeszcze raz.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            pewnosc = input("Czy jesteś pewien?: ")
            if pewnosc not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu")
                break
        if pewnosc == "tak":
            cur.execute(f"""DELETE FROM rooms WHERE room_number={id_input}""")
        if pewnosc == "nie":
            print("Anulowano pokoju lekarza")
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire not in ("tak", "nie"):
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Błąd wprowadzania danych.")
            print("------------------------------------------------------------------------------------------------------------------------------------")
            save_desire = input("Czy chcesz zapisać zmiany?")
            if save_desire not in ("tak", "nie"):
                print("Błąd krytyczny. Zamykanie programu.")
                break
            print("------------------------------------------------------------------------------------------------------------------------------------")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("------------------------------------------------------------------------------------------------------------------------------------")
            print("Anulowano usuwanie pokoju.")
    elif command == "Wyszukaj pacjenta":
        print("""
                +-------------------------------------------+
                |Aby szukać po id, napisz: 1.               |
                +-------------------------------------------+
                |Aby szukać po imieniu, napisz: 2.          |
                +-------------------------------------------+
                |Aby szukać po nazwisku, napisz: 3.         |
                +-------------------------------------------+
                |Aby szukać po imieniu i nazwisku napisz: 4.|
                +-------------------------------------------+
                |Aby szukać po podawanym leku napisz: 5.    |
                +-------------------------------------------+
                |Aby szukać po statucie pacjenta napisz: 6. |
                +-------------------------------------------+
                |Aby szukać pacjentów na o. dyż. napisz: 7. |
                +-------------------------------------------+
                |Aby szukać po nr. telefonu napisz: 8       |
                +-------------------------------------------+
                |Aby szukać po chorobie napisz: 9           |
                +-------------------------------------------+
                |Aby szukać po pokoju napisz: 10            |
                +-------------------------------------------+
                |Aby szukać po łóżku napisz: 11             |
                +-------------------------------------------+
                """)
        prompt = input(">>>")
        match prompt:
            case '1':
                id_search = input("Podaj id pacjenta: ")
                print(
                    returning_query(f"SELECT * FROM Patients WHERE id LIKE '%{id_search}%' ")
                )
            case '2':
                name_search = input("Podaj imię pacjenta: ")
                print(
                    returning_query(f"SELECT * FROM Patients WHERE Name LIKE '%{name_search}%' ")
                )
            case '3':
                surname_search = input("Podaj nazwisko pacjenta: ")
                print(
                    returning_query(f"SELECT * FROM Patients WHERE Surname LIKE '%{surname_search}%' ")
                )
            case '4':
                name_search = input("Podaj imię pacjenta: ")
                surname = input("Podaj nazwisko pacjenta: ")
                print(
                    returning_query(f"SELECT * FROM Patients WHERE Name LIKE '%{name_search}%' AND WHERE Surname LIKE '%{surname_search}%' ")
                )
                
            case '5':
                medicine_given_search = input("Podaj nazwę leku, który przyjmuje pacjent: ")
                print(
                    returning_query(f"SELECT * FROM Patients WHERE medicine LIKE '%{medicine_given_search}%' ")
                )
            case '6':
                print("Możliwe statusy: Hospitalizowany, Na obserwacji, Niehospitalizowany")
                patient_status_search = input("Podaj status pacjenta: ")
                match patient_status_search:
                    case 'Hospitalizowany':
                        print(returning_query(f"SELECT * FROM Patients WHERE is_hospitalised LIKE '%{1}%' "))
                    case 'Na obserwacji':
                        print(returning_query(f"SELECT * FROM Patients WHERE is_on_observation LIKE '%{1}%' "))
                    case 'Niehospitalizowany':
                        print(returning_query(f"SELECT * FROM Patients WHERE is_hospitalised LIKE '%{0}%' "))
            case '7':
                print("Aby wyszukać pacjentów na ostrym dyż. napisz: 1, a jeżeli tych, którzy nie są, napisz: 2")
                is_on_er_status_search = input(">>>")
                match is_on_er_status_search:
                    case '1':
                        print(returning_query(f"SELECT * FROM Patients WHERE is_on_er LIKE '%{1}%' "))
                    case '2':
                        print(returning_query(f"SELECT * FROM Patients WHERE is_on_er LIKE '%{0}%' "))
            case '8':
                phone_search = input("Wyszukaj numer telefonu: ")
                print(returning_query(f"SELECT * FROM Patients WHERE phone LIKE '%{phone_search}%' "))
            
    elif command == "Wyszukaj lekarza":
        print("""
                +-----------------------------------------------+
                |Aby wyszukać po imieniu napisz: 1              |
                +-----------------------------------------------+
                |Aby wyszukać po nazwisku napisz: 2             |
                +-----------------------------------------------+
                |Aby wyszukać po imieniu i nazwisku napisz: 3   |
                +-----------------------------------------------+
                |Aby wyszukać po numerze telefonu napisz: 4     |
                +-----------------------------------------------+
                |Aby wyszukać po leczonych pacjentach napisz: 5 |
                +-----------------------------------------------+
                """)
        match command:
            case '1':
                name_search = input("Podaj imię lekarza: ")
                print(returning_query(f"SELECT * FROM Doctors WHERE Name LIKE '%{name_search}%' "))
            case '2':
                surname_search = input("Podaj nazwisko lekarza: ")
                print(returning_query(f"SELECT * FROM Doctors WHERE Surname LIKE '%{surname_search}%' "))
            case '3':
                name_search = input("Podaj imię lekarza: ")
                surname_search = input("Podaj nazwisko lekarza: ")
                print(returning_query(f"SELECT * FROM Doctors WHERE Name LIKE '%{name_search}%' AND WHERE Surname LIKE '%{surname_search}%' "))
            case '4':
                phone_search = input("Podaj numer telefonu: ")
                print(returning_query(f"SELECT * FROM Doctors WHERE phone LIKE '%{phone_search}%' "))
            case '5':
                patient_search = input("Podaj id pacjenta, którego leczy lekarz: ")
                print(returning_query(f"SELECT * FROM Doctors WHERE patients LIKE '%{phone_search}%' "))
            
        
    elif command == "Wyszukaj lek":
        print("""
                +-------------------------------------------+
                |Aby wyszukać po id napisz: 1               |
                +-------------------------------------------+
                |Aby wyszukac po nazwie napisz: 2           |
                +-------------------------------------------+
                |Aby wyszukać po dostępnej ilości napisz: 3 |
                +-------------------------------------------+
                |Aby wyszukać po typie leku naciśnij: 4     |
                +-------------------------------------------+
                """)
        prompt = input(">>>")
        match prompt:
            case '1':
                id_search = input("Podaj id leku: ")
                print(returning_query(f"SELECT * FROM medicines WHERE id='{id_search}' "))
            case '2':
                name_search = input("Podaj nazwę leku: ")
                print(returning_query(f"SELECT * FROM medicines WHERE Name='{name_search}' "))
            case '3':
                quantity_search = input("Podaj dostępną ilość leku: ")
                print(returning_query(f"SELECT * FROM medicines WHERE total_amount='{quantity_search}' "))
            case '4':
                type_search = input("Podaj typ leku: ")
                print(returning_query(f"SELECT * FROM medicines WHERE type LIKE '%{type_search}%' "))

    elif command == "Wyswietl wszystko":
        print(returning_query(f"SELECT * FROM Patients"))
        print(returning_query(f"SELECT * FROM Doctors"))
        print(returning_query(f"SELECT * FROM medicines"))
        print(returning_query(f"SELECT * FROM rooms"))
        print(returning_query(f"SELECT * FROM beds"))
    
    elif command == "Wyswietl pacjentow":
        print(returning_query(f"SELECT * FROM Patients"))
    elif command == "Wyswietl lekarzy":
        print(returning_query(f"SELECT * FROM Doctors"))
    elif command == "Wyswietl leki":
        print(returning_query(f"SELECT * FROM medicines"))
    elif command == "Wyswietl pokoje":
        print(returning_query(f"SELECT * FROM rooms"))
    elif command == "Wyswietl lozka":
        print(returning_query(f"SELECT * FROM beds"))
        
    elif command == "Przypisz lek":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        name = input("Podaj imię pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        surname = input("Podaj nazwisko pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        p_id = input("Podaj id pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        medicine_name = input("Podaj nazwę leku: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc == "tak":
            cur.execute(f"""UPDATE Patients SET medicine = '{medicine_name}' WHERE id = '{p_id}'""")
        if pewnosc == "nie":
            print("Anulowano przypisywanie leku.")
            pass
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("Anulowano przypisywanie leku.")
            pass
    elif command == "Zmien lek":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        name = input("Podaj imię pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        surname = input("Podaj nazwisko pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        p_id = input("Podaj id pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        medicine_name = input("Podaj nazwę leku: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        pewnosc = input("Czy jesteś pewien?: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        if pewnosc == "tak":
            cur.execute(f"""UPDATE Patients SET medicine = '{medicine_name}' WHERE id = '{p_id}'""")
        if pewnosc == "nie":
            print("Anulowano przypisywanie leku.")
            pass
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("Anulowano przypisywanie leku.")
            pass
        
    elif command == "Przenies pacjenta":
        print("------------------------------------------------------------------------------------------------------------------------------------")
        p_id = input("Podaj id pacjenta: ")
        print("------------------------------------------------------------------------------------------------------------------------------------")
        print("""
              []============================================================[]
              []    Aby przenieść do innego łóżka naciśnij 1.               []
              []    Aby przenieść pacjenta do innego pokoju naciśnij 2.     []
              []============================================================[]
              """)
        przenoszenie_prompt = input('>>>')
        match przenoszenie_prompt:
            case '1':
                bed_prompt = input('Podaj numer łóżka do ktorego ma być przeniesiony pacjent: ')
                
                if pewnosc == "tak":
                    cur.execute(f"""UPTADE Patients SET bed={bed_prompt}""")
                if pewnosc == "nie":
                    print("Anulowano przenoszenie pacjenta.")
            case '2':
                print("------------------------------------------------------------------------------------------------------------------------------------")
                room_prompt = input('Podaj numer pokoju do którego pacjent ma być przeniesiony: ')
                print("------------------------------------------------------------------------------------------------------------------------------------")
                pewnosc = input("Czy jesteś pewien?: ")
                print("------------------------------------------------------------------------------------------------------------------------------------")
                if pewnosc == "tak":
                    cur.execute(f"""UPTADE Patients SET room={room_prompt}""")
                if pewnosc == "nie":
                    print("Anulowano przenoszenie pacjenta.")
                else:
                    print("Błąd wprowadzania danych.")
                    
        save_desire = input("Czy chcesz zapisać zmiany?")
        if save_desire == "tak":
            con.commit()
        if save_desire == "nie":
            print("Anulowano przenoszenie pacjenta.")